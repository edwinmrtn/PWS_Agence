/*
Syntaxe CSS :
	sélecteur {propriété1 : valeur1 ;propriété2 : valeur2 ;…}

Couleurs : aqua, black, blue, fuchsia, gray, green, lime,
			maroon, navy, olive, purple, red, silver, teal, white...

Qq propriétés du texte :
- text-align: left| right| center| justify
- text-decoration: none | underline| overline| line-through
- text-transform: none | capitalize| uppercase| lowercase
- text-indent: length| 10%
- white-space: normal | pre| nowrap
- color: rgb(255,0,0)
- direction : ltr| rtl

Qq propriétés de police :
- font-family: courier,serif
- font-size: xx-small| x-small| small| medium | …
- font-weight: normal | bold | bolder| …
- font-style: normal | italic| oblique

Combinaison de plusieurs propriétés :
font : courier small italic

Qq propriétés du fond
- background-color: rgb(255,0,0)
- background-image: url("titi.gif")
- background-repeat: repeat| no-repeat| repeat-x| repeat-y
- background-attachment: scroll | fixed

Combiner plusieurs propriétés de background en une:
 - background : url("titi.gif") fixed no-repeat
 
 De l'extérieur vers le contenu : Marge (margin), Bordure (border) et Espacement (padding)
 
 Marge
- margin-top: auto | taille
- margin-right: auto | taille
- margin-bottom: auto | taille
- margin-left: auto | taille
raccourci : margin : 1px 2px 3px 2px

si 2 marges opposés sont "auto", 
elles divisent l'espace disponible en 2
utile pour centrer les éléments de type bloc dans leur container
ex: 
div> table {
	margin-left: auto;
	margin-right: auto;
}

Espacement
- padding-top: taille
- padding-right: taille
- padding-bottom: taille
- padding-left: taille
raccourci : padding : 1px 2px 3px 2px

Bordures
- border-width: thin| medium | thick| size
- border-style: none | hidden| dotted| dashed| solid| double| 
						groove| ridge| inset| outset
- border-color: grey | ...
Raccourci : border : solid 1px blue

On peut changer la position des boîtes avec top, bottom, left, right(: size)

Import d'une feuille de style au début d'une autre
<style type="text/css">
		@import url("loudvoice.css");
</style>

Lorsque plusieurs définitions CSS se combinent, on peut utiliser !important 
pour imposer une priorité de style
ex: body {
		color: black !important;
		background: white !important;
}

différence entre un span et un id ? 
		- id et class sont des arguments pour parametrer l'affichage de balises
		- span prend id ou class comme arg et permet de modifier l'apparence d'un bout de                    texte  sans avoir besoin d'une autre balise...
		- ex 1 : <h4 id="important"> ceci est un texte important </h4>
		- ex 2 : Ma couleur préférée est le <span id="gros"> rouge </span>
*/

html, body {
/* on définit une hauteur et une largeur de 100% pour tous les blocs parents du document (body ET html) 
de manière à ce que celui occupe tout le navigateur */
	height: 100%;
	width: 100%;
/* pas de marge externe ni interne autour du contenu dans ces blocs */
	margin: 0;
	padding: 0;
}

div {
/* pour tous les div, le texte est centré */
	text-align:center;
}

#en_tete {
/* le signe # decrit un identifiant unique auquel s'applique le style */
/* largeur du bandeau en pixels (comme width:600px;) ou un pourcentage. 
Dans cet exemple, le bandeau occupe 100% du bloc parent (le body) qui lui-même
occupe 100% du navigateur */
	width:100%;
/* hauteur du bandeau : en pixels ou un pourcentage */
	height:10%;
/* couleur de fond du bandeau
on peut utiliser un code #rrggbb où r,g et b sont des chiffres hexadecimaux
ou rgb(r,g,b) ou r,g et b sont des nb de 0 à 255
ou un mot-clé comme silver, red, yellow... 
*/
	background-color:#C0C0C0;
}

#menu {
/* si on met dans un fichier HTML des divs les uns à la suite des autres, ils s'affichent les uns sous les autres.
Pour afficher deux div l'un à coté de l'autre, il faut utiliser la propriété float que l'on met à left pour le div menu
et pour le div contenu. Ce bloc Menu sert de "conteneur" pour les div menu_haut et menu_bas */
	float:left;
	width:15%;
	height:85%;
	background-color:#00FFFF;
	/* background-color:rgb(188,65,34); */
}


/*   classe element_menu à définir ... */


#corps {
	/*	
	la balise overflow permet de définir le comportement de la div 
	quand le contenu est rop grand. Avec la valeur scroll, ce débordement
	est géré par des barres de défilement. Ci-dessous on précise qu'on veut
	seulement une barre de défilement verticale (overflow -y:scroll).  
	Si on veut aussi une barre de défilement horizontale, on fait: overflow:scroll;
*/
	float:left;
	overflow-y:scroll;
	width:85%;
	height:85%;
        color: #0d2d4b;
        background: #FFF8DC
	/* background-color:#FFCC00; */
}

#pied_page {
/* le pied de page se glisse sous le menu et le contenu à cause de la propriété float précédemment utilisée.
Pour éviter cela on utilise une propriété qui va permettre que notre élément se remette à se 
comporter normalement (qu'il se positionne en dessous du reste). C'est la propriété clear:both */
	clear:both;
	width:100%;
	height:5%;
	background-color:#00CED1;
}
	
tr:hover{
	background-color:#ffff99;
}

a:link {
	text-decoration:underline;
	color:blue;
}
